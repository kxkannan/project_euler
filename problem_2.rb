#Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
#By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
#find the sum of the even-valued terms.

class Problem2

  def fib_terms_under_4million
    terms = [1,2]

    idx = 2
    new_term = 0
    while new_term < 4000000
      new_term =  terms[idx-2] + terms[idx-1] 
      terms.push(new_term) 
      idx += 1
    end
    return terms
  end

  def sum_of_even_valued_terms(terms)
    sum = 0
    terms.each { |n| puts "Adding #{n} " if n % 2 == 0; sum += n if n % 2 == 0 }
    return sum
  end

end

p2 = Problem2.new
terms = p2.fib_terms_under_4million
puts "Sum of even valued terms: #{p2.sum_of_even_valued_terms(terms)}"
